"""empty message

Revision ID: 386ec228abb8
Revises: 
Create Date: 2018-01-30 11:10:49.511084

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '386ec228abb8'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('students') as batch_op:
        batch_op.drop_constraint('students_user_id_fkey')
    op.alter_column('schools', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=32))
    op.alter_column('students', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=32))
    op.alter_column('students', 'user_id',
                    existing_type=sa.INTEGER(),
                    type_=sa.String(length=32))
    op.alter_column('users', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=32),
               existing_server_default=sa.text("nextval('users_id_seq'::regclass)"))
    with op.batch_alter_table('students') as batch_op:
        batch_op.create_foreign_key('students_user_id_fkey','users', ['user_id'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'id',
               existing_type=sa.String(length=32),
               type_=sa.INTEGER(),
               existing_server_default=sa.text("nextval('users_id_seq'::regclass)"))
    op.alter_column('students', 'id',
               existing_type=sa.String(length=32),
               type_=sa.INTEGER())
    op.alter_column('schools', 'id',
               existing_type=sa.String(length=32),
               type_=sa.INTEGER())
    # ### end Alembic commands ###
